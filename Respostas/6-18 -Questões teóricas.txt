6 - O que são os comandos DML?

R:  Linguagem de Manipulação de Dados: Esses comandos indicam uma ação para o SGBD executar. 
Utilizados para recuperar, inserir e modificar um registro no banco de dados. Seus comandos são: INSERT, DELETE, UPDATE, SELECT e LOCK;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7 - O que são os comandos DDL?

R:  Linguagem de Definição de Dados: Comandos DDL são responsáveis pela criação, alteração e exclusão dos objetos no banco de dados. 
São eles: CREATE TABLE, CREATE INDEX, ALTER TABLE, DROP TABLE, DROP VIEW e DROP INDEX;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8- O que são os comandos DCL?

R: Linguagem de Controle de Dados: Responsável pelo controle de acesso dos usuários, controlando as sessões e transações do SGBD. Alguns de seus comandos são: COMMIT, ROLLBACK, GRANT e REVOKE.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9- Temos 2 tabelas: serviceorder e client. Análise os códigos abaixo e aponte qual é o correto para a criação de uma chave estrangeira na tabela serviceorder referenciando a tabela client.

R: Opção 1: 
 alter table serviceorder add constraint fk_serviceorder_client
     foreign key(id_client)
       references client (id_serviceorder)
         on delete no action
         on update no action;
 
 (obs: o nome da chave primária referenciada na tabela client está incorreta)
 
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10 - Dado a tabela abaixo, criamos um comando de INSERT, no entanto ele esta apresentando um erro. Reescreva o código corrigindo-o:

 R:
 INSERT INTO cliente(      
	  Id,
      nome_cliente,
      razao_social,
      dt_cadastro,
      cnpj,
      telefone,
      cidade,
      estado)
    VALUES (      
	  1,
      'AARONSON',
      'AARONSON FURNITURE LTDA',
      '2015-02-17',
      '17.807.928/0001-85',
      '(21) 8167-6584',
      'MARINGA',
      'PR'
    );
	
Obs: caso a coluna ID não apresentar uma PK então a mesma poderá ser mantida no insert.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11 - Reescreva o código abaixo corrigindo o comando:

R:
UPDATE CLIENT 
SET name = 'FULANO DE TAL',
     cnpj = '17807928000185'
WHERE id = 3234;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12 - Você precisa montar um relatório para buscar os vendedores agrupados por nome, cliente e mostrando o total que cada um realizou de vendas por cliente. Para isso considere as seguintes tabelas:

R:
SELECT
	VD.nome as Vendedor,
	C.nome as Cliente,
	Sum(V.totalvenda) TotalVenda
from vendas V
	inner join vendedor VD on VD.id = V.vendedorID
	inner join cliente C on C.id = V.clienteID
group by VD.nome, C.nome

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13 - Utilizamos a função GROUP BY para agrupar informações iguais de determidas colunas. Com base nos seus conhecimentos a respeito da função GROUP BY, assinale o código correto:

R: 
Opção 1
SELECT c.nome, sum(v.total_venda)
     FROM cliente c
     INNER JOIN vendas v on v.id_cliente = c.id
     WHERE v.dt_venda > '01/01/2019'
     GROUP BY c.nome
     ORDER BY 1

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14 - Muitas vezes queremos buscar um registro no banco de dados mas não sabemos o termo completo que queremos consultar. 
Ex: Você foi instruído para consultar o nome de todos os clientes que possuem o texto "Souza" no nome. Para isso você recebeu o comando abaixo incorreto. Análise a consulta e reescreva da maneira correta.

R:
SELECT nome
FROM cliente        
WHERE nome like '%Souza%'

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15 - A tabela "cliente" foi criada com a estrutura incorreta. Agora você precisa criar um comando para excluir essa tabela do banco de dados. Assinale a alternativa correta.

R:
Drop table cliente

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16 - É muito comum termos a necessidade de buscar diversas informações utilizando um único comando. 
Ex: Precisamos trazer em uma única consulta todos os nomes dos clientes referentes aos ids "12", "10", "199", "18", "01", "2016". Construa uma consulta utilizando a tabela "cliente" e o campo "id".

R:
select C.Nome
from cliente C
where C.id in (12, 10, 199, 18, 1, 2016)

Obs: caso a coluna id for varchar os itens da clausula in deverão estar entre aspas simples.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17 - Dado que temos as duas tabelas abaixo:
Como existe um relacionamento entre as duas tabelas, assinale a consulta que irá ter a melhor performance e que está correta:

R: 
Opção 1:
  SELECT c.nome, c.email
         FROM cliente c
         INNER JOIN vendas v on v.clienteID = c.id
         WHERE v.dt_venda > '01/01/2019'
         ORDER BY 1
		 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------		 
18 - Analise o cenário:
Você tem um banco de dados com as tabelas abaixo:

        CREATE TABLE cliente (
            id        INT NOT NULL,
            nome      varchar(100) NOT NULL,
            PRIMARY KEY (id));

        CREATE TABLE vendas (
            id         int NOT NULL PRIMARY KEY,
            dtcriacao  date,
            clienteID  int FOREIGN KEY REFERENCES cliente(id));
			
Após a criação das tabelas foram inseridos os seguintes registros:

        insert cliente values (1, 'ESCUDEIRO');
        insert cliente values (2, 'CAVALEIRO');
        insert cliente values (3, 'MESTRE');

        insert vendas values(1, '01/01/2019', 1);
        insert vendas values(2, '01/01/2019', 2);
        insert vendas values(3, '01/01/2019', 3);
		
O analista responsável pelo gerenciamento do banco de dados precisa excluir a tabela cliente. 
Levando em consideração o relacionamento entre as duas tabelas. 
Como seria o único comando que iria excluir a tabela cliente e vendas de uma só vez.

R:
drop table vendas, cliente

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------		 


